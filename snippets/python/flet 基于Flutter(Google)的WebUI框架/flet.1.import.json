{
  "引入 flet WebUI框架": {
    "prefix": ["import_flet", "im_flet_as_ft"],
    "body": [
      "import flet as ft  # * 引入 flet WebUI框架",
      "from flet import *  # * 引入 flet 框架所有子控件",
      ""
    ],
    "description": ["引入 flet WebUI框架"]
  },
  "引入 flet WebUI框架 及 控件组件": {
    "prefix": ["import_flet_class_def=", "im_flet_class_def="],
    "body": [
      "from pathlib import Path",
      "from typing import Callable",
      "",
      "import darkdetect  # * 引入 darkdetect 智能主题模式检测库",
      "import flet as ft  # * 引入 flet WebUI框架",
      "from flet import *  # * 引入 flet 框架所有子控件",
      "",
      "",
      "class MianApp(ft.Container):",
      "    # * class default args(类变量) | signal(信号)",
      "    def __init__(self, page: ft.Page) -> None:",
      "        # * class input args(参数)",
      "        \"\"\"",
      "        创建 flet 类 Container 容器控件对象",
      "        \"\"\"",
      "        super().__init__(expand=True)  # * 继承父类 ft.Container 容器控件对象属性 [expand=True: 拉伸]",
      "        self.page: ft.Page = page  # * 定义页面对象(self.page: ft.Page 使用类型约束规避 None)",
      "",
      "        # * 页面配置",
      "        self.page_conf",
      "",
      "        self.page.add(",
      "            ft.Row(  # * [水平]布局",
      "                expand=True,  # * 拉伸(若限制 宽度/高度, 则此属性无效)",
      "                spacing=0,  # * 元素间距",
      "                controls=[  # * 添加控件",
      "                    self.loading_view",
      "                    ft.VerticalDivider(width=1),  # * 垂直分割线",
      "                    self.error_view",
      "                ],",
      "            )",
      "        )",
      "",
      "    @property  # * 页面配置属性",
      "    def page_conf(self):",
      "        \"\"\"",
      "        页面配置",
      "        \"\"\"",
      "        # * 页面标题",
      "        self.page.title = '🤖Flet Counter Example'",
      "        # * 字体",
      "        self.page.fonts = {'currentFont': str(Path(Path(__file__).parent.resolve(), '.ttf'))}",
      "        # * 定义主题方案 [字体 | 配色]",
      "        self.page.theme = ft.Theme(",
      "            # font_family='currentFont',",
      "            color_scheme=ft.ColorScheme(  # 浅色主题配色方案",
      "                primary=ft.Colors.BLACK,  # 应用界面和组件中的主要颜色[图标/按钮/标签 等界面元素或控件的颜色]",
      "            ),",
      "        )",
      "        self.page.dark_theme = ft.Theme(",
      "            # font_family='currentFont',",
      "            color_scheme=ft.ColorScheme(  # 深色主题配色方案",
      "                primary=ft.Colors.WHITE,  # 应用界面和组件中的主要颜色[图标/按钮/标签 等界面元素或控件的颜色]",
      "            ),",
      "        )",
      "        # * 主题模式 (LIGHT: 浅色, DARK: 深色, SYSTEM[默认]: 系统默认)",
      "        self.page.theme_mode = ft.ThemeMode.SYSTEM",
      "        # * 子控件[垂直]对齐方式 (START[默认]: 顶部, CENTER: 居中, END: 底部, SPACE_BETWEEN: 上下两端对齐, SPACE_AROUND: 上下两端对齐, SPACE_EVENLY: 上下两端对齐)",
      "        self.page.vertical_alignment = ft.MainAxisAlignment.START",
      "        # * 子控件[水平]对齐方式 (START[默认]: 左侧, CENTER: 居中, END: 右侧, STRETCH: 拉伸, BASELINE: 基线对齐)",
      "        self.page.horizontal_alignment = ft.CrossAxisAlignment.START",
      "        # * 页面内边距 (0[默认]: 无内边距, 10: 10px内边距)",
      "        self.page.padding = 0",
      "        # * 页面外边距 (0[默认]: 无外边距, 10: 10px外边距)",
      "        self.page.spacing = 0",
      "        # * 桌面应用/页面 图标 (相对路径)",
      "        # self.page.window.icon = 'assets/icon.png'",
      "        # * 桌面应用/页面 对齐方式(初始位置) [ft.Alignment: 居中:(0,0); 左上:(-1, -1); 右下:(1, 1)]",
      "        self.page.window.alignment = ft.Alignment(0, 0)",
      "        # * 桌面应用/页面 宽度 | 高度",
      "        self.page.window.width = 1280",
      "        self.page.window.height = 720",
      "        # * 桌面应用/页面 最小宽度 | 最小高度",
      "        self.page.window.min_width = 1280",
      "        self.page.window.min_height = 720",
      "        return self.page",
      "",
      "    @property  # * loading_加载中页面",
      "    def loading_view(self):",
      "        \"\"\"",
      "        loading: 加载中页面",
      "        \"\"\"",
      "        self.__loading_view = ft.Column(",
      "            controls=[",
      "                ft.Text(value='loading...', size=32, color=ft.Colors.GREY_500),",
      "            ],",
      "            expand=True,",
      "            alignment=ft.MainAxisAlignment.CENTER,",
      "            horizontal_alignment=ft.CrossAxisAlignment.CENTER,",
      "        )",
      "        return self.__loading_view",
      "",
      "    @property  # * 404_错误页面",
      "    def error_view(self):",
      "        \"\"\"",
      "        404: 错误页面",
      "        \"\"\"",
      "        self.__error_view = ft.Column(",
      "            controls=[",
      "                ft.Text(value='🔞\\n__404__', size=64),",
      "            ],",
      "            expand=True,",
      "            alignment=ft.MainAxisAlignment.START,",
      "            horizontal_alignment=ft.CrossAxisAlignment.START,",
      "        )",
      "        return self.__error_view",
      "",
      "",
      "if __name__ == '__main__':",
      "    \"\"\"",
      "    运行入口 | 调试运行",
      "    \"\"\"",
      "    ft.app(",
      "        target=MianApp,  # * 运行目标[包含 page.add 的函数或类名]",
      "        use_color_emoji=True,  # * emoji表情是否使用颜色",
      "        # view=ft.WEB_BROWSER,  # *运行模式: (默认:独立窗口, WEB_BROWSER:浏览器)",
      "    )",
      ""
    ],
    "description": ["引入 flet WebUI框架 及 控件组件"]
  }
}
