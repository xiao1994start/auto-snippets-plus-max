{
  "引入 json 格式模块": {
    "prefix": "im -json",
    "body": ["import json"],
    "description": ["引入JSON格式模块"]
  },
  "json.dumps 编码JSON->字符串": {
    "prefix": "json.dumps -json",
    "body": ["json.dumps(${1:数据对象}, indent = ${2:2}, ensure_ascii=False)"],
    "description": ["json.dumps 用于将 Python 对象编码成 JSON 字符串"]
  },
  "json.dump 编码JSON->文件": {
    "prefix": "json.dump -json",
    "body": [
      "json.dump(${1:文件对象}, ${2:as_file}, indent = 2, ensure_ascii=False)"
    ],
    "description": ["json.dump 用于将 Python 对象编码成 JSON -> 文件"]
  },
  "json.loads 解码JSON数据->dict": {
    "prefix": "json.loads -json",
    "body": ["json.loads(${1:JSON数据})"],
    "description": [
      "json.loads 用于解码 JSON 数据, 将已编码的 JSON 字符串解码为 Python 对象",
      "    该函数返回 Python 字段的数据类型"
    ]
  },
  "json.load 文件->解码JSON数据": {
    "prefix": "json.load -json",
    "body": ["json.load(${1:JSON文件})"],
    "description": [
      "json.load 用于解码 JSON 文件, 将已编码的 JSON 字符串解码为 Python 对象",
      "    该函数返回 Python 字段的数据类型"
    ]
  },
  "with.open.json -r 只读json": {
    "prefix": "with open_json -r",
    "body": [
      "with open(${1:file_path}, 'r', encoding='utf-8') as f_json:",
      "    json_data = json.load(f_json)",
      "    $0"
    ],
    "description": [
      "open -r 以只读方式打开文件文件的指针将会放在文件的开头这是默认模式",
      "文件必须存在, 不存在抛出错误"
    ]
  },
  "with.open.json -w 只写json": {
    "prefix": "with open_json -w",
    "body": [
      "with open(${1:json_path}, 'w', encoding='utf-8') as f_json:",
      "    json_data = {}",
      "    f_json.write(json.dumps(json_data, indent=2, ensure_ascii=False))",
      "    f_json.flush()  # 写文件刷新缓存"
    ],
    "description": [
      "open -w+ 打开一个文件用于读写如果该文件已存在则打开文件, 并从开头开始编辑, 即原有内容会被删除如果该文件不存在, 创建新文件"
    ]
  },
  "with.open.json -w+ 读写json": {
    "prefix": "with open_json -w+",
    "body": [
      "with open(${1:json_path}, 'w+', encoding='utf-8') as f_json:",
      "    json_data = json.load(f_json)",
      "    $0",
      "    f_json.write(json.dumps(json_data, indent=2, ensure_ascii=False))",
      "    f_json.flush()  # 写文件刷新缓存"
    ],
    "description": [
      "open -w+ 打开一个文件用于读写如果该文件已存在则打开文件, 并从开头开始编辑, 即原有内容会被删除如果该文件不存在, 创建新文件"
    ]
  }
}
