{
  "flet.main(page: ft.Page) 创建主界面框架函数.示例": {
    "prefix": [
      "ft_def_main_page=",
      "flet_def_main_page="
    ],
    "body": [
      "def main(page: ft.Page):",
      "    # * 页面标题",
      "    page.title = 'Flet Counter Example'",
      "    # * 字体",
      "    page.fonts = {'字体': '字体路径'}",
      "    page.theme = ft.Theme(font_family='字体')",
      "    # * 主题模式 (LIGHT: 浅色, DARK: 深色, SYSTEM[默认]: 系统默认)",
      "    page.theme_mode = ft.ThemeMode.SYSTEM",
      "    # * 子控件[垂直]对齐方式 (START[默认]: 顶部, CENTER: 居中, END: 底部, SPACE_BETWEEN: 上下两端对齐, SPACE_AROUND: 上下两端对齐, SPACE_EVENLY: 上下两端对齐)",
      "    page.vertical_alignment = ft.MainAxisAlignment.START",
      "    # * 子控件[水平]对齐方式 (START[默认]: 左侧, CENTER: 居中, END: 右侧, STRETCH: 拉伸, BASELINE: 基线对齐)",
      "    page.horizontal_alignment = ft.CrossAxisAlignment.START",
      "    # * 页面内边距 (0[默认]: 无内边距, 10: 10px内边距)",
      "    page.padding = 0",
      "    # * 页面外边距 (0[默认]: 无外边距, 10: 10px外边距)",
      "    page.spacing = 0",
      "    # * 桌面应用/页面 图标 (相对路径)",
      "    # page.window.icon = 'assets/icon.png'",
      "    # * 桌面应用/页面 对齐方式(初始位置) [ft.Alignment: 居中:(0,0); 左上:(-1, -1); 右下:(1, 1)]",
      "    page.window.alignment = ft.Alignment(0, 0)",
      "    # * 桌面应用/页面 宽度 | 高度",
      "    page.window.width = 1280",
      "    page.window.height = 720",
      "    # * 桌面应用/页面 最小宽度 | 最小高度",
      "    page.window.min_width = 1280",
      "    page.window.min_height = 720",
      "",
      ""
    ],
    "description": [
      "flet.main(page: ft.Page) 创建主界面框架函数.示例"
    ]
  },
  "flet.NavigationRail Flet侧边导航栏.示例": {
    "prefix": [
      "ft_def_NavigationRail_toggle_theme=",
      "flet_def_NavigationRail_toggle_theme="
    ],
    "body": [],
    "description": [
      "flet.NavigationRail Flet侧边导航栏.示例"
    ]
  },
  "flet.page.theme_mode.button Flet主题按钮.示例": {
    "prefix": [
      "ft_def_theme_mod_button=",
      "flet_def_theme_mod_button="
    ],
    "body": [
      "def toggle_theme(e):",
      "    \"\"\"",
      "    改变主题模式",
      "    :param e: 事件对象",
      "    \"\"\"",
      "    # import darkdetect  # * 引入 darkdetect 检测系统主题",
      "    if page.theme_mode == ft.ThemeMode.DARK:",
      "        page.theme_mode = ft.ThemeMode.LIGHT",
      "        btn_theme.icon = ft.Icons.LIGHT_MODE",
      "    elif page.theme_mode == ft.ThemeMode.LIGHT:",
      "        page.theme_mode = ft.ThemeMode.DARK",
      "        btn_theme.icon = ft.Icons.DARK_MODE",
      "    else:",
      "        # * page.theme_mode = ThemeMode.SYSTEM 跟随系统主题模式",
      "        is_dark = darkdetect.isDark()",
      "        if is_dark:",
      "            page.theme_mode = ft.ThemeMode.LIGHT",
      "            btn_theme.icon = ft.Icons.LIGHT_MODE",
      "        else:",
      "            page.theme_mode = ft.ThemeMode.DARK",
      "            btn_theme.icon = ft.Icons.DARK_MODE",
      "    page.update()",
      "btn_theme = ft.IconButton(icon=ft.Icons.DARK_MODE, tooltip='切换主题', on_click=toggle_theme)",
      ""
    ],
    "description": [
      "flet.page.theme_mode.button Flet主题按钮.示例"
    ]
  },
  "flet.AppBar Flet顶部应用栏.示例": {
    "prefix": [
      "ft_AppBar_toggle_theme=",
      "flet_AppBar_toggle_theme="
    ],
    "body": [
      "# * AppBar[顶部应用栏]",
      "page.appbar = ft.AppBar(",
      "    leading=ft.Icon(ft.Icons.HOUSE),  # * 左侧图标 | ft.Image(src='最好使用Path获取完整路径', width=32, height=32, border_radius=[圆角])",
      "    title=ft.Text('Flet Counter Example'),  # * 标题",
      "    center_title=True,  # * 标题居中",
      "    bgcolor=ft.Colors.with_opacity(opacity=0, color='#000000'),  # * 背景颜色",
      "    actions=[  # * 右侧图标",
      "        ft.Text('ft_def_theme_mod_button=Flet主题模式切换按钮'),",
      "    ],",
      ")",
      ""
    ],
    "description": [
      "flet.AppBar Flet顶部应用栏.示例"
    ]
  }
}