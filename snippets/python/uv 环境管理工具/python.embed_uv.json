{
  "python-embed 嵌入式环境激活": {
    "prefix": ["embed_uv -python", "EM_UV -python"],
    "body": [
      "@ECHO OFF",
      "setlocal enabledelayedexpansion",
      "CD /D \"%~dp0\"",
      "",
      "",
      "for /D %%i in (python*embed*) do ( ECHO 修改 python*embed* 目录名为 python && ren \"%%i\" \"python\" )",
      "",
      "if not exist \"%~dp0python\" ( ECHO 请先部署 python_embed 环境  && PAUSE && exit /B )",
      "",
      "if not exist \"%~dp0.vscode\" (",
      "    ECHO 创建嵌入式环境工作区设置",
      "    md \"%~dp0.vscode\"",
      ")",
      "",
      "",
      "if not exist \"%~dp0.vscode\\settings.json\" (",
      "    ECHO 配置项目工作配置文件",
      "    ECHO {> \"%~dp0.vscode\\settings.json\"",
      "    ECHO   \"python.defaultInterpreterPath\": \"\\${workspaceFolder}/python/python.exe\", // * python Interpreter Path>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO   \"qtForPython.designer.path\": \"\\${workspaceFolder}/python/Scripts/pyside6-designer.exe\", // * Qt Designer Path>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO   \"qtForPython.uic.path\": \"\\${workspaceFolder}/python/Scripts/pyside6-uic.exe\", // * PySide6-uic Path>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO   \"qtForPython.rcc.path\": \"\\${workspaceFolder}/python/Scripts/pyside6-rcc.exe\", // * PySide6-rcc Path>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO   \"qtForPython.qml.path\": \"\\${workspaceFolder}/python/Scripts/pyside6-qml.exe\" // * PySide6-qml Path>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO }>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO.>> \"%~dp0.vscode\\settings.json\"",
      "    ECHO.",
      "    ECHO 配置调试启动配置文件",
      "    ECHO {> \"%~dp0.vscode\\launch.json\"",
      "    ECHO  // Help_en: https://go.microsoft.com/fwlink/?linkid=830387>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO  // Help_zh: https://vscode.github.net.cn/docs/python/debugging>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO   \"version\": \"0.2.0\",>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO   \"configurations\": [>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO     {>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"name\": \"Python Debug : Current File\",>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"type\": \"debugpy\",>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"request\": \"launch\",>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"program\": \"\\${file}\", // * Run Debug File>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"python\": \"\\${command:python.interpreterPath}\", // * Default settings.json -^> python.defaultInterpreterPath>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"console\": \"integratedTerminal\",>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"justMyCode\": false,>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"autoReload\": { \"enable\": true },>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"cwd\": \"\\${workspaceFolder}\",>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"env\": {>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO         \"PATH\": \"\\${workspaceFolder}/python;\\${workspaceFolder}/python/Scripts;\\${env:PATH}\">> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       },>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO       \"envFile\": \"\\${workspaceFolder}/.venv\">> \"%~dp0.vscode\\launch.json\"",
      "    ECHO     }>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO   ]>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO }>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO.>> \"%~dp0.vscode\\launch.json\"",
      "    ECHO.",
      ")",
      "",
      "",
      "@REM ! 提取本地 python 环境变量中的Tkinter库",
      "@REM ECHO 配置 .env 文件",
      "@REM ECHO PATH=\\${workspaceFolder}/python:\\${workspaceFolder}/python/Scripts:\\${PATH}> \"%~dp0\\.env\"",
      "@REM ECHO 创建 tkinter 框架",
      "@REM if not exist \"%~dp0python\\Lib\\site-packages\" ( md \"%~dp0python\\Lib\\site-packages\" )",
      "@REM ECHO 配置 .\\DLLs 文件 tkinter 相关动态链接库",
      "@REM set remain=%PATH%",
      "@REM :loopPath",
      "@REM for /F \"tokens=1* delims=;\" %%a in (\"%remain%\") do (",
      "@REM     set pyPath=%%a",
      "@REM     if not \"!pyPath:Python=!\"==\"!pyPath!\" (",
      "@REM         if \"!pyPath:Scripts=!\"==\"!pyPath!\" (",
      "@REM             goto :outLoop",
      "@REM         ) else ( set remain=%%b )",
      "@REM     ) else ( set remain=%%b )",
      "@REM )",
      "@REM @REM 如果还有剩余,则继续分割",
      "@REM if defined remain goto :loopPath",
      "@REM :outLoop",
      "@REM ECHO !pyPath!",
      "@REM if not exist \"%~dp0python\\tcl\" ( xcopy /S /E /I /Y \"!pyPath!\\tcl\" \"%~dp0python\\tcl\" )",
      "@REM if not exist \"%~dp0python\\Lib\\site-packages\\tkinter\" ( xcopy /S /E /I /Y \"!pyPath!\\Lib\\tkinter\" \"%~dp0python\\Lib\\site-packages\\tkinter\" )",
      "@REM if not exist \"%~dp0python\\_tkinter.pyd\" ( copy /V /Y \"!pyPath!\\DLLs\\_tkinter.pyd\" \"%~dp0python\" )",
      "@REM if not exist \"%~dp0python\\tcl86t.pyd\" ( copy /V /Y \"!pyPath!\\DLLs\\tcl86t.dll\" \"%~dp0python\" )",
      "@REM if not exist \"%~dp0python\\tk86t.pyd\" ( copy /V /Y \"!pyPath!\\DLLs\\tk86t.dll\" \"%~dp0python\" )",
      "@REM if not exist \"%~dp0python\\zlib1.pyd\" ( copy /V /Y \"!pyPath!\\DLLs\\zlib1.dll\" \"%~dp0python\" )",
      "",
      "",
      "ECHO 设置python embed 环境变量",
      "set systemPath=%path%",
      "@REM systemPath 设置为系统初始化环境变量",
      "set systemPath=C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\bin32;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\bin;C:\\WINDOWS;C:\\WINDOWS\\system32;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\",
      "set PYTHON_HOME=%~dp0python;%~dp0python\\Scripts",
      "set path=%PYTHON_HOME%;%systemPath%;",
      "ECHO %path%",
      "",
      "",
      "",
      "if not exist \"%~dp0python\\get-pip.py\" (",
      "    ECHO 初始化 get-pip.py",
      "    ECHO.",
      "    @REM todo 进入 python 目录(pip documentation:https://pip.pypa.io/en/stable/installation/ ^| 下载get-pip.py: https://www.python.org/downloads/windows/)",
      "    ECHO 配置 pip 镜像",
      "    ECHO [global]> \"%~dp0python\\pip.ini\"",
      "    ECHO index-url = https://mirrors.aliyun.com/pypi/simple/>> \"%~dp0python\\pip.ini\"",
      "    ECHO [install]>> \"%~dp0python\\pip.ini\"",
      "    ECHO trusted-host=mirrors.aliyun.com>> \"%~dp0python\\pip.ini\"",
      "    ECHO.",
      "    ECHO get-pip.py正在下载...",
      "    @REM * -sSL (组合命令) --silent(静默模式) --show-error(静默模式下显示错误) --location(自动跟随重定向)",
      "    @REM *     -s / --silent        静默模式, 隐藏进度条和冗余信息",
      "    @REM *     -S / --show-error    即使静默模式仍显示错误信息. 便于发现问题",
      "    @REM *     -L / --location      自动跟随重定向. 确保获取到最终资源",
      "    @REM * -# / --progress-bar      强制显示进度条 (覆盖 -s 的限制)",
      "    @REM * -o / --output            输出到指定文件",
      "    curl -SL https://bootstrap.pypa.io/get-pip.py -o \"%~dp0python\\get-pip.py\"",
      "    ECHO.",
      "    ECHO 修改 python*._pth 导入",
      "    CD /D \"%~dp0python\"",
      "    for %%i in (python*._pth) do (",
      "        for /F \"tokens=*\" %%j in (%%i) do (",
      "            if not \"%%j\"==\"import site\" (",
      "                ECHO %%j>> \"%~dp0python\\python._pth\"",
      "            )",
      "        )",
      "        ECHO import site>> \"%~dp0python\\python._pth\"",
      "        del /F /Q %%i",
      "        ren \"%~dp0python\\python._pth\" %%i",
      "    )",
      "    CD /D \"%~dp0\"",
      "    ECHO.",
      "    ECHO 初始化环境 pip",
      "    python \"%~dp0python\\get-pip.py\" -i https://mirrors.aliyun.com/pypi/simple/",
      "    ECHO.",
      ")",
      "",
      "",
      "ECHO python 版本号",
      "call python --version",
      "ECHO pip 版本号",
      "call pip --version",
      "",
      "ECHO 环境 pip 执行",
      "@REM ECHO 安装虚拟环境 requirements.txt...",
      "@REM pip install -r \"%~dp0\\requirements.txt\" -i https://mirrors.aliyun.com/pypi/simple/",
      "@REM ECHO 安装 Jupyter交互式笔记本环境 内核ipykernel依赖库... @REM * 可选",
      "@REM pip install -U ipykernel -i https://mirrors.aliyun.com/pypi/simple/",
      "ECHO 安装 setuptools 打包分发工具... @REM ! 建议安装",
      "pip install -U setuptools -i https://mirrors.aliyun.com/pypi/simple/",
      "",
      "ECHO 安装依赖库...使用虚拟环境开发时, 直接使用 requirements.txt 安装依赖库",
      "@REM 使用虚拟环境开发时, 直接使用 requirements.txt 安装依赖库",
      "",
      "",
      "ECHO UV 环境管理器...",
      "pip install -U uv -i https://mirrors.aliyun.com/pypi/simple/",
      "ECHO 设置 uv 镜像源",
      "set UV_DEFAULT_INDEX=https://mirrors.aliyun.com/pypi/simple/",
      "@REM * 载入 uv 时,注意 python 版本报错提示",
      "if not exist \"%~dp0pyproject.toml\" (",
      "    ECHO 目标不存在ECHO uv 当前文件夹创建新项目...(默认当前文件夹)",
      "    uv init",
      "    ECHO 创建 uv 虚拟环境...",
      "    uv venv",
      ")",
      "",
      "",
      "$0",
      "",
      "",
      "",
      "",
      "ECHO 导出依赖库",
      "uv pip freeze  > \"%~dp0\\requirements.txt\"",
      "",
      "ECHO 完成",
      "endlocal",
      "exit /B",
      "",
      "",
      "ECHO  █████╗ ██╗   ██╗ █████╗ ",
      "ECHO ██╔══██╗██║   ██║██╔══██╗",
      "ECHO ███████║██║   ██║███████║",
      "ECHO ██╔══██║╚██╗ ██╔╝██╔══██║",
      "ECHO ██║  ██║ ╚████╔╝ ██║  ██║",
      "ECHO ╚═╝  ╚═╝  ╚═══╝  ╚═╝  ╚═╝",
      "",
      "",
      ":setting_ruff",
      "配置 Ruff ruff.toml 格式化规则 ",
      "# 帮助文档: https://docs.astral.sh/ruff/configuration/",
      "",
      "[lint]",
      "select = [\"E4\", \"E7\", \"E9\", \"F\"]",
      "ignore = [\"Q000\", \"Q001\", \"Q002\", \"F401\", \"F403\", \"F404\"]",
      "fixable = [\"ALL\"]",
      "unfixable = []",
      "dummy-variable-rgx = \"^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$\"",
      "",
      "[format]",
      "quote-style = \"single\"",
      "indent-style = \"space\"",
      "skip-magic-trailing-comma = false",
      "line-ending = \"auto\"",
      "docstring-code-line-length = \"dynamic\"",
      "goto eof",
      ""
    ],
    "description": ["python-embed 嵌入式环境激活"]
  }
}
